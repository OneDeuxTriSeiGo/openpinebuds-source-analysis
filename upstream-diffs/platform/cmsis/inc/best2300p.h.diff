local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/cmsis/inc/best2300p.h
remote: https://raw.githubusercontent.com/ARM-software/CMSIS_4/b3abccd71a5669e57492996910d032ce9a2249dc/Device/ARM/ARMCM4/Include/ARMCM4_FP.h
diff -sw local remote
---

2c2
<  * @file     best2300p.h
---
>  * @file     ARMCM4_FP.h
39,40c39,40
< #ifndef __BEST2300P_H__
< #define __BEST2300P_H__
---
> #ifndef ARMCM4_FP_H
> #define ARMCM4_FP_H
46c46
< #ifndef __ASSEMBLER__
---
> 
62,117c62,85
< /* ----------------------  BEST1000 Specific Interrupt Numbers  --------------------- */
<   FPU_IRQn                      =   0,      /*!< FPU Interrupt                      */
<   SENSOR_WKUP_IRQn              =   1,      /*!< SENSOR Wakeup Interrupt            */
<   SDMMC_IRQn                    =   2,      /*!< SDMMC Interrupt                    */
<   AUDMA_IRQn                    =   3,      /*!< Audio DMA Interrupt                */
<   GPDMA_IRQn                    =   4,      /*!< General Purpose DMA Interrupt      */
<   AON_WDT_IRQn                  =   5,      /*!< AON Watchdog Timer Interrupt       */
<   USB_PHY_IRQn                  =   6,      /*!< USB PHY Interrupt                  */
<   USB_IRQn                      =   7,      /*!< USB Interrupt                      */
<   WAKEUP_IRQn                   =   8,      /*!< Wakeup Interrupt                   */
<   AON_GPIO_IRQn                 =   9,      /*!< AON GPIO Interrupt                 */
<   MCU_WDT_IRQn                  =  10,      /*!< Watchdog Timer Interrupt           */
<   SENSOR_ENG_IRQn               =  11,      /*!< Sensor Engine Interrupt            */
<   MCU_TIMER00_IRQn              =  12,      /*!< Timer00 Interrupt                  */
<   MCU_TIMER01_IRQn              =  13,      /*!< Timer01 Interrupt                  */
<   I2C0_IRQn                     =  14,      /*!< I2C0 Interrupt                     */
<   SPI0_IRQn                     =  15,      /*!< SPI0 Interrupt                     */
<   SPILCD_IRQn                   =  16,      /*!< SPILCD Interrupt                   */
<   UART0_IRQn                    =  17,      /*!< UART0 Interrupt                    */
<   UART1_IRQn                    =  18,      /*!< UART1 Interrupt                    */
<   CODEC_IRQn                    =  19,      /*!< CODEC Interrupt                    */
<   BTPCM_IRQn                    =  20,      /*!< BTPCM Interrupt                    */
<   I2S0_IRQn                     =  21,      /*!< I2S0 Interrupt                     */
<   SPDIF0_IRQn                   =  22,      /*!< SPDIF0 Interrupt                   */
<   I2S1_IRQn                     =  23,      /*!< I2S1 Interrupt                     */
<   BT_IRQn                       =  24,      /*!< BT to MCU Interrupt                */
<   CODEC_TX_PEAK_IRQn            =  25,      /*!< CODEC TX PEAK Interrupt            */
<   UART2_IRQn                    =  26,      /*!< UART2 Interrupt                    */
<   MCU_TIMER10_IRQn              =  27,      /*!< Timer10 Interrupt                  */
<   MCU_TIMER11_IRQn              =  28,      /*!< Timer11 Interrupt                  */
<   I2C1_IRQn                     =  29,      /*!< I2C1 Interrupt                     */
<   DUMP_IRQn                     =  30,      /*!< DUMP Interrupt                     */
<   SPIPHY_IRQn                   =  31,      /*!< SPIPHY Interrupt                   */
<   ISDONE_IRQn                   =  32,      /*!< Intersys MCU2BT Data Done Interrupt */
<   ISDONE1_IRQn                  =  33,      /*!< Intersys MCU2BT Data1 Done Interrupt */
<   ISDATA_IRQn                   =  34,      /*!< Intersys BT2MCU Data Indication Interrupt */
<   ISDATA1_IRQn                  =  35,      /*!< Intersys BT2MCU Data1 Indication Interrupt */
<   CP2MCU_DATA_IRQn              =  36,      /*!< Intersys CP2MCU Data Indication Interrupt */
<   CP2MCU_DATA1_IRQn             =  37,      /*!< Intersys CP2MCU Data1 Indication Interrupt */
<   CP2MCU_DATA2_IRQn             =  38,      /*!< Intersys CP2MCU Data Indication Interrupt */
<   CP2MCU_DATA3_IRQn             =  39,      /*!< Intersys CP2MCU Data1 Indication Interrupt */
<   USB_CAL_IRQn                  =  40,      /*!< USB Calibration Interrupt          */
<   USB_PIN_IRQn                  =  41,      /*!< USB Pin Interrupt                  */
<   PMU_IRQn                      =  42,      /*!< PMU Interrupt                      */
<   SEC_ENG_IRQn                  =  43,      /*!< Security Engine Interrupt          */
<   AON_IRQn                      =  44,      /*!< AON Interrupt                      */
<   AON_TIMER00_IRQn              =  45,      /*!< AON Timer00 Interrupt              */
<   AON_TIMER01_IRQn              =  46,      /*!< AON Timer01 Interrupt              */
<   SEDMA_IRQn                    =  47,      /*!< Security Engine DMA Interrupt      */
<   MCU2CP_DONE_IRQn              =  48,      /*!< Intersys MCU2CP Data Done Interrupt */
<   MCU2CP_DONE1_IRQn             =  49,      /*!< Intersys MCU2CP Data Done Interrupt */
<   MCU2CP_DONE2_IRQn             =  50,      /*!< Intersys MCU2CP Data Done Interrupt */
<   MCU2CP_DONE3_IRQn             =  51,      /*!< Intersys MCU2CP Data Done Interrupt */
< 
<   USER_IRQn_QTY,
<   INVALID_IRQn                  = USER_IRQn_QTY,
---
> /* ----------------------  ARMCM4 Specific Interrupt Numbers  --------------------- */
>   WDT_IRQn                      =   0,      /*!< Watchdog Timer Interrupt           */
>   RTC_IRQn                      =   1,      /*!< Real Time Clock Interrupt          */
>   TIM0_IRQn                     =   2,      /*!< Timer0 / Timer1 Interrupt          */
>   TIM2_IRQn                     =   3,      /*!< Timer2 / Timer3 Interrupt          */
>   MCIA_IRQn                     =   4,      /*!< MCIa Interrupt                     */
>   MCIB_IRQn                     =   5,      /*!< MCIb Interrupt                     */
>   UART0_IRQn                    =   6,      /*!< UART0 Interrupt                    */
>   UART1_IRQn                    =   7,      /*!< UART1 Interrupt                    */
>   UART2_IRQn                    =   8,      /*!< UART2 Interrupt                    */
>   UART4_IRQn                    =   9,      /*!< UART4 Interrupt                    */
>   AACI_IRQn                     =  10,      /*!< AACI / AC97 Interrupt              */
>   CLCD_IRQn                     =  11,      /*!< CLCD Combined Interrupt            */
>   ENET_IRQn                     =  12,      /*!< Ethernet Interrupt                 */
>   USBDC_IRQn                    =  13,      /*!< USB Device Interrupt               */
>   USBHC_IRQn                    =  14,      /*!< USB Host Controller Interrupt      */
>   CHLCD_IRQn                    =  15,      /*!< Character LCD Interrupt            */
>   FLEXRAY_IRQn                  =  16,      /*!< Flexray Interrupt                  */
>   CAN_IRQn                      =  17,      /*!< CAN Interrupt                      */
>   LIN_IRQn                      =  18,      /*!< LIN Interrupt                      */
>   I2C_IRQn                      =  19,      /*!< I2C ADC/DAC Interrupt              */
>   CPU_CLCD_IRQn                 =  28,      /*!< CPU CLCD Combined Interrupt        */
>   UART3_IRQn                    =  30,      /*!< UART3 Interrupt                    */
>   SPI_IRQn                      =  31,      /*!< SPI Touchscreen Interrupt          */
120,132d87
< #define GPIO_IRQn               AON_GPIO_IRQn
< #define GPADC_IRQn              INVALID_IRQn
< #define PWRKEY_IRQn             INVALID_IRQn
< #ifdef CORE_SLEEP_POWER_DOWN
< #define TIMER00_IRQn            AON_TIMER00_IRQn
< #define TIMER01_IRQn            AON_TIMER01_IRQn
< #else
< #define TIMER00_IRQn            MCU_TIMER00_IRQn
< #define TIMER01_IRQn            MCU_TIMER01_IRQn
< #endif
< #define WDT_IRQn                AON_WDT_IRQn
< 
< #endif
141d95
< #define __VTOR_PRESENT            1U        /* VTOR present */
145,146d98
< #define __NUM_CODE_PATCH          6
< #define __NUM_LIT_PATCH           2
148a101
> #include "system_ARMCM4.h"                  /* System Header                                     */
150,154d102
< #ifndef __ASSEMBLER__
< 
< #include "system_ARMCM.h"                  /* System Header                                     */
< 
< #endif
166,169d113
< #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
<   #pragma clang diagnostic push
<   #pragma clang diagnostic ignored "-Wc11-extensions"
<   #pragma clang diagnostic ignored "-Wreserved-id-macro"
181a126,213
> 
> 
> /* ================================================================================ */
> /* ================            CPU FPGA System (CPU_SYS)           ================ */
> /* ================================================================================ */
> typedef struct
> {
>   __I  uint32_t ID;               /* Offset: 0x000 (R/ )  Board and FPGA Identifier */
>   __IO uint32_t MEMCFG;           /* Offset: 0x004 (R/W)  Remap and Alias Memory Control */
>   __I  uint32_t SW;               /* Offset: 0x008 (R/ )  Switch States */
>   __IO uint32_t LED;              /* Offset: 0x00C (R/W)  LED Output States */
>   __I  uint32_t TS;               /* Offset: 0x010 (R/ )  Touchscreen Register */
>   __IO uint32_t CTRL1;            /* Offset: 0x014 (R/W)  Misc Control Functions */
>        uint32_t RESERVED0[2];
>   __IO uint32_t CLKCFG;           /* Offset: 0x020 (R/W)  System Clock Configuration */
>   __IO uint32_t WSCFG;            /* Offset: 0x024 (R/W)  Flash Waitstate Configuration */
>   __IO uint32_t CPUCFG;           /* Offset: 0x028 (R/W)  Processor Configuration */
>        uint32_t RESERVED1[3];
>   __IO uint32_t BASE;             /* Offset: 0x038 (R/W)  ROM Table base Address */
>   __IO uint32_t ID2;              /* Offset: 0x03C (R/W)  Secondary Identification Register */
> } ARM_CPU_SYS_TypeDef;
> 
> 
> /* ================================================================================ */
> /* ================            DUT FPGA System (DUT_SYS)           ================ */
> /* ================================================================================ */
> typedef struct
> {
>   __I  uint32_t ID;               /* Offset: 0x000 (R/ )  Board and FPGA Identifier */
>   __IO uint32_t PERCFG;           /* Offset: 0x004 (R/W)  Peripheral Control Signals */
>   __I  uint32_t SW;               /* Offset: 0x008 (R/ )  Switch States */
>   __IO uint32_t LED;              /* Offset: 0x00C (R/W)  LED Output States */
>   __IO uint32_t SEG7;             /* Offset: 0x010 (R/W)  7-segment LED Output States */
>   __I  uint32_t CNT25MHz;         /* Offset: 0x014 (R/ )  Freerunning counter incrementing at 25MHz */
>   __I  uint32_t CNT100Hz;         /* Offset: 0x018 (R/ )  Freerunning counter incrementing at 100Hz */
> } ARM_DUT_SYS_TypeDef;
> 
> 
> /* ================================================================================ */
> /* ================                   Timer (TIM)                  ================ */
> /* ================================================================================ */
> typedef struct
> {
>   __IO uint32_t Timer1Load;       /* Offset: 0x000 (R/W)  Timer 1 Load */
>   __I  uint32_t Timer1Value;      /* Offset: 0x004 (R/ )  Timer 1 Counter Current Value */
>   __IO uint32_t Timer1Control;    /* Offset: 0x008 (R/W)  Timer 1 Control */
>   __O  uint32_t Timer1IntClr;     /* Offset: 0x00C ( /W)  Timer 1 Interrupt Clear */
>   __I  uint32_t Timer1RIS;        /* Offset: 0x010 (R/ )  Timer 1 Raw Interrupt Status */
>   __I  uint32_t Timer1MIS;        /* Offset: 0x014 (R/ )  Timer 1 Masked Interrupt Status */
>   __IO uint32_t Timer1BGLoad;     /* Offset: 0x018 (R/W)  Background Load Register */
>        uint32_t RESERVED0[1];
>   __IO uint32_t Timer2Load;       /* Offset: 0x020 (R/W)  Timer 2 Load */
>   __I  uint32_t Timer2Value;      /* Offset: 0x024 (R/ )  Timer 2 Counter Current Value */
>   __IO uint32_t Timer2Control;    /* Offset: 0x028 (R/W)  Timer 2 Control */
>   __O  uint32_t Timer2IntClr;     /* Offset: 0x02C ( /W)  Timer 2 Interrupt Clear */
>   __I  uint32_t Timer2RIS;        /* Offset: 0x030 (R/ )  Timer 2 Raw Interrupt Status */
>   __I  uint32_t Timer2MIS;        /* Offset: 0x034 (R/ )  Timer 2 Masked Interrupt Status */
>   __IO uint32_t Timer2BGLoad;     /* Offset: 0x038 (R/W)  Background Load Register */
> } ARM_TIM_TypeDef;
> 
> 
> /* ================================================================================ */
> /* ============== Universal Asyncronous Receiver / Transmitter (UART) ============= */
> /* ================================================================================ */
> typedef struct
> {
>   __IO uint32_t DR;               /* Offset: 0x000 (R/W)  Data */
>   union {
>   __I  uint32_t RSR;              /* Offset: 0x000 (R/ )  Receive Status */
>   __O  uint32_t ECR;              /* Offset: 0x000 ( /W)  Error Clear */
>   };
>        uint32_t RESERVED0[4];
>   __IO uint32_t FR;               /* Offset: 0x018 (R/W)  Flags */
>        uint32_t RESERVED1[1];
>   __IO uint32_t ILPR;             /* Offset: 0x020 (R/W)  IrDA Low-power Counter */
>   __IO uint32_t IBRD;             /* Offset: 0x024 (R/W)  Interger Baud Rate */
>   __IO uint32_t FBRD;             /* Offset: 0x028 (R/W)  Fractional Baud Rate */
>   __IO uint32_t LCR_H;            /* Offset: 0x02C (R/W)  Line Control */
>   __IO uint32_t CR;               /* Offset: 0x030 (R/W)  Control */
>   __IO uint32_t IFLS;             /* Offset: 0x034 (R/W)  Interrupt FIFO Level Select */
>   __IO uint32_t IMSC;             /* Offset: 0x038 (R/W)  Interrupt Mask Set / Clear */
>   __IO uint32_t RIS;              /* Offset: 0x03C (R/W)  Raw Interrupt Status */
>   __IO uint32_t MIS;              /* Offset: 0x040 (R/W)  Masked Interrupt Status */
>   __O  uint32_t ICR;              /* Offset: 0x044 ( /W)  Interrupt Clear */
>   __IO uint32_t DMACR;            /* Offset: 0x048 (R/W)  DMA Control */
> } ARM_UART_TypeDef;
> 
> 
187,188d218
< #elif (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
<   #pragma clang diagnostic pop
200a231,277
> 
> 
> 
> /* ================================================================================ */
> /* ================              Peripheral memory map             ================ */
> /* ================================================================================ */
> /* --------------------------  CPU FPGA memory map  ------------------------------- */
> #define ARM_FLASH_BASE            (0x00000000UL)
> #define ARM_RAM_BASE              (0x20000000UL)
> #define ARM_RAM_FPGA_BASE         (0x1EFF0000UL)
> #define ARM_CPU_CFG_BASE          (0xDFFF0000UL)
> 
> #define ARM_CPU_SYS_BASE          (ARM_CPU_CFG_BASE  + 0x00000)
> #define ARM_UART3_BASE            (ARM_CPU_CFG_BASE  + 0x05000)
> 
> /* --------------------------  DUT FPGA memory map  ------------------------------- */
> #define ARM_APB_BASE              (0x40000000UL)
> #define ARM_AHB_BASE              (0x4FF00000UL)
> #define ARM_DMC_BASE              (0x60000000UL)
> #define ARM_SMC_BASE              (0xA0000000UL)
> 
> #define ARM_TIM0_BASE             (ARM_APB_BASE      + 0x02000)
> #define ARM_TIM2_BASE             (ARM_APB_BASE      + 0x03000)
> #define ARM_DUT_SYS_BASE          (ARM_APB_BASE      + 0x04000)
> #define ARM_UART0_BASE            (ARM_APB_BASE      + 0x06000)
> #define ARM_UART1_BASE            (ARM_APB_BASE      + 0x07000)
> #define ARM_UART2_BASE            (ARM_APB_BASE      + 0x08000)
> #define ARM_UART4_BASE            (ARM_APB_BASE      + 0x09000)
> 
> 
> /* ================================================================================ */
> /* ================             Peripheral declaration             ================ */
> /* ================================================================================ */
> /* --------------------------  CPU FPGA Peripherals  ------------------------------ */
> #define ARM_CPU_SYS               ((ARM_CPU_SYS_TypeDef *)  ARM_CPU_SYS_BASE)
> #define ARM_UART3                 ((   ARM_UART_TypeDef *)    ARM_UART3_BASE)
> 
> /* --------------------------  DUT FPGA Peripherals  ------------------------------ */
> #define ARM_DUT_SYS               ((ARM_DUT_SYS_TypeDef *)  ARM_DUT_SYS_BASE)
> #define ARM_TIM0                  ((    ARM_TIM_TypeDef *)     ARM_TIM0_BASE)
> #define ARM_TIM2                  ((    ARM_TIM_TypeDef *)     ARM_TIM2_BASE)
> #define ARM_UART0                 ((   ARM_UART_TypeDef *)    ARM_UART0_BASE)
> #define ARM_UART1                 ((   ARM_UART_TypeDef *)    ARM_UART1_BASE)
> #define ARM_UART2                 ((   ARM_UART_TypeDef *)    ARM_UART2_BASE)
> #define ARM_UART4                 ((   ARM_UART_TypeDef *)    ARM_UART4_BASE)
> 
> 
205c282
< #endif
---
> #endif  /* ARMCM4_FP_H */
