local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/rtos/rtx5/rtx_config/rtx_config.c
remote: https://raw.githubusercontent.com/ARM-software/CMSIS_5/95ad2aa1a7cab351a0a246263ccb9d6921586df2/CMSIS/RTOS2/RTX/Config/RTX_Config.c
diff -sw local remote
---

29,30d28
< #include "RTE_Components.h"
< #include CMSIS_device_header
32,48d29
< #include "rtx_config.h"
< #include "hal_timer.h"
< #include "hal_trace.h"
< #include "hal_sleep.h"
< 
< #include "cmsis_os2.h"
< #include "hwtimer_list.h"
< 
< void WEAK sleep(void)
< {
<     hal_sleep_enter_sleep();
< }
< 
< extern void rtx_show_all_threads(void);
< #if TASK_HUNG_CHECK_ENABLED
< extern void check_hung_threads(void);
< #endif
51,70c32,33
< __NO_RETURN void osRtxIdleThread (void *argument) {
<     unsigned int os_ticks;
<     HWTIMER_ID timer;
<     int ret;
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<     unsigned int start_time;
<     unsigned int start_os_time;
<     unsigned int start_tick;
< #endif
< #if !(defined(ROM_BUILD) || defined(PROGRAMMER))
<     ret = hal_trace_crash_dump_register(HAL_TRACE_CRASH_DUMP_MODULE_SYS, rtx_show_all_threads);
<     ASSERT(ret == 0, "IdleTask: Failed to register crash dump callback");
< #endif
<     timer = hwtimer_alloc(NULL, NULL);
<     ASSERT(timer, "IdleTask: Failed to alloc sleep timer");
< 
<   for (;;) {
< #if TASK_HUNG_CHECK_ENABLED
<         check_hung_threads();
< #endif
---
> __WEAK __NO_RETURN void osRtxIdleThread (void *argument) {
>   (void)argument;
72,98c35
<         if (hal_sleep_light_sleep() == HAL_SLEEP_STATUS_DEEP) {
<             os_ticks = osKernelSuspend();
<             if (os_ticks) {
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<                 __disable_irq();
< #endif
<                 ret = hwtimer_start(timer, MS_TO_HWTICKS(os_ticks * OS_TICK_FREQ / 1000));
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<                 start_time = hal_sys_timer_get();
<                 start_tick = SysTick->VAL;
<                 start_os_time = osRtxInfo.kernel.tick;
<                 __enable_irq();
< #endif
<                 if (ret == 0) {
<                     sleep();
<                     ret = hwtimer_stop(timer);
<                 }
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<                 if (hal_sys_timer_get() - start_time >= MS_TO_HWTICKS(1)) {
<                     TRACE(5,"[%u/0x%X][%2u/%u] os_idle_demon start timer. tick:%u",
<                         TICKS_TO_MS(start_time), start_time, start_tick, start_os_time, os_ticks);
<                 }
< #endif
<             }
<             osKernelResume(os_ticks);
<         }
<     }
---
>   for (;;) {}
125c62
<   ASSERT(0, "osRtxErrorNotify, code: %08x\n", code);
---
>   for (;;) {}
