local: https://raw.githubusercontent.com/pine64/OpenPineBuds/29b195e12da6a5c791d1418af8448be80bccf18d/thirdparty/audio_codec_lib/liblhdc-dec/inc/lhdcUtil.h
remote: https://raw.githubusercontent.com/mvaisakh/android_external_lhdc/9865db63010176b6c9aa00de9b5d79f82fc1bf90/liblhdcdec/include/lhdcUtil.h
diff -sw local remote
---

11c11,22
< #include "bluetooth.h"
---
> #include <stdbool.h>
> #include <stdint.h>
> 
> 
> 
> 
> 
> #ifdef __cplusplus
> extern "C" {
> #endif
> // Copy definition from external
> #define BTIF_BD_ADDR_SIZE    6
22c33,35
<   VERSION_3 = 300
---
>   VERSION_3 = 300,
>   VERSION_4 = 400,
>   VERSION_LLAC = 500
30c43
< typedef struct bes_bt_local_info_t{
---
> typedef struct savi_bt_local_info_t{
37c50,71
< }bes_bt_local_info;
---
> }savi_bt_local_info;
> 
> typedef struct _lhdc_frame_Info
> {
>     uint32_t frame_len; // 该 frame 的长处，若是分离压缩，则表示单一声道的 frame 长度。
>     uint32_t isSplit;   // 是否为分离方式压缩
>     uint32_t isLeft;    // 左声道 == true， 右声道 == false
> 
> } lhdc_frame_Info_t;
> 
> 
> typedef enum {
>     LHDC_OUTPUT_STEREO = 0,
>     LHDC_OUTPUT_LEFT_CAHNNEL,
>     LHDC_OUTPUT_RIGHT_CAHNNEL,
> } lhdc_channel_t;
> 
> typedef int LHDCSample;
> 
> typedef void (*print_log_fp)(char*  msg);
> typedef int (*LHDC_GET_BT_INFO)(savi_bt_local_info * bt_info);
> 
47d80
< typedef int (*LHDC_GET_BT_INFO)(bes_bt_local_info * bt_info);
50,53c83,84
< bool lhdcReadyForInput(void);
< uint32_t lhdcPutData(uint8_t * pInpBuf, uint32_t NumBytes);
< uint32_t lhdcDecodeProcess(uint8_t * pOutBuf);
< void lhdcDestroy();
---
> 
> uint32_t lhdcDecodeProcess(uint8_t * pOutBuf, uint8_t * pInput, uint32_t len);
54a86
> void lhdcSetLicenseKeyChkPeriod (uint8_t period);
55a88,100
> 
> void lhdcDestroy();
> 
> void lhdc_register_log_cb(print_log_fp cb);
> 
> uint32_t lhdcGetSampleSize( void);
> bool lhdcFetchFrameInfo(uint8_t * frameData, lhdc_frame_Info_t * frameInfo);
> 
> uint32_t lhdcChannelSelsect(lhdc_channel_t channel_type);
> 
> #ifdef __cplusplus
> }
> #endif
