local: https://raw.githubusercontent.com/pine64/OpenPineBuds/29b195e12da6a5c791d1418af8448be80bccf18d/rtos/rtx/TARGET_CORTEX_M/RTX_Conf_CM.c
remote: https://raw.githubusercontent.com/ARM-software/mbed-beetle/45ddf10698e1be3ee922de70d4801b5bd776e0ca/libraries/rtos/rtx/TARGET_CORTEX_M/RTX_Conf_CM.c
diff -sw local remote
---

35,36d34
< #include  "stdarg.h"
< #include  "stdio.h"
38,51c36
< #include "rt_System.h"
< #include "rt_Time.h"
< #include "hal_timer.h"
< #include "hal_trace.h"
< #include "hal_sleep.h"
< #include "cmsis.h"
< #include "hwtimer_list.h"
< 
< #define WEAK __attribute__((weak))
< 
< void WEAK sleep(void)
< {
<     hal_sleep_enter_sleep();
< }
---
> 
67c52,61
< #    define OS_TASKCNT         __BEST_D_OS_TASKCNT
---
> #  if   defined(TARGET_LPC1768) || defined(TARGET_LPC2368)   || defined(TARGET_LPC4088) || defined(TARGET_LPC4337) || defined(TARGET_LPC1347) || defined(TARGET_K64F) || defined(TARGET_STM32F401RE)\
> 	 || defined(TARGET_KL46Z) || defined(TARGET_KL43Z)  || defined(TARGET_STM32F407) || defined(TARGET_F407VG)  || defined(TARGET_STM32F303VC) || defined(TARGET_LPC1549) || defined(TARGET_LPC11U68) || defined(TARGET_NRF51822) || defined(TARGET_STM32F411RE)
> #    define OS_TASKCNT         14
> #  elif defined(TARGET_LPC11U24) || defined(TARGET_LPC11U35_401)  || defined(TARGET_LPC11U35_501) || defined(TARGET_LPCCAPPUCCINO) || defined(TARGET_LPC1114) \
> 	 || defined(TARGET_LPC812)   || defined(TARGET_KL25Z)         || defined(TARGET_KL05Z)        || defined(TARGET_STM32F100RB)  || defined(TARGET_STM32F051R8) \
> 	 || defined(TARGET_STM32F103RB) || defined(TARGET_LPC824) || defined(TARGET_STM32F302R8) || defined(TARGET_STM32F334R8) || defined(TARGET_STM32F334C8)
> #    define OS_TASKCNT         6
> #  else
> #    error "no target defined"
> #  endif
72c66,75
< #      define OS_SCHEDULERSTKSIZE    __BEST_D_OS_SCHEDULERSTKSIZE
---
> #  if   defined(TARGET_LPC1768) || defined(TARGET_LPC2368)   || defined(TARGET_LPC4088) || defined(TARGET_LPC4337) || defined(TARGET_LPC1347)  || defined(TARGET_K64F) || defined(TARGET_STM32F401RE)\
> 	 || defined(TARGET_KL46Z) || defined(TARGET_KL43Z) || defined(TARGET_STM32F407) || defined(TARGET_F407VG)  || defined(TARGET_STM32F303VC) || defined(TARGET_LPC1549) || defined(TARGET_LPC11U68) || defined(TARGET_NRF51822) || defined(TARGET_STM32F411RE)
> #      define OS_SCHEDULERSTKSIZE    256
> #  elif defined(TARGET_LPC11U24) || defined(TARGET_LPC11U35_401)  || defined(TARGET_LPC11U35_501) || defined(TARGET_LPCCAPPUCCINO)  || defined(TARGET_LPC1114) \
> 	 || defined(TARGET_LPC812)   || defined(TARGET_KL25Z)         || defined(TARGET_KL05Z)        || defined(TARGET_STM32F100RB)  || defined(TARGET_STM32F051R8) \
> 	 || defined(TARGET_STM32F103RB) || defined(TARGET_LPC824) || defined(TARGET_STM32F302R8) || defined(TARGET_STM32F334R8) || defined(TARGET_STM32F334C8)
> #      define OS_SCHEDULERSTKSIZE    128
> #  else
> #    error "no target defined"
> #  endif
78c81
<  #define OS_IDLESTKSIZE         256
---
>  #define OS_IDLESTKSIZE         128
102a106,157
> // </h>
> // <h>SysTick Timer Configuration
> // ==============================
> //
> //   <o>Timer clock value [Hz] <1-1000000000>
> //   <i> Defines the timer clock value.
> //   <i> Default: 6000000  (6MHz)
> #ifndef OS_CLOCK
> #  if defined(TARGET_LPC1768) || defined(TARGET_LPC2368)
> #    define OS_CLOCK       96000000
> 
> #  elif defined(TARGET_LPC1347) || defined(TARGET_STM32F303VC) || defined(TARGET_LPC1549) || defined(TARGET_STM32F302R8) || defined(TARGET_STM32F334R8) || defined(TARGET_STM32F334C8)
> #    define OS_CLOCK       72000000
> 
> #  elif defined(TARGET_LPC11U24) || defined(TARGET_LPC11U35_401)  || defined(TARGET_LPC11U35_501) || defined(TARGET_LPCCAPPUCCINO)  || defined(TARGET_LPC1114) || defined(TARGET_KL25Z) || defined(TARGET_KL05Z) || defined(TARGET_KL46Z) || defined(TARGET_KL43Z) || defined(TARGET_STM32F051R8) || defined(TARGET_LPC11U68)
> #    define OS_CLOCK       48000000
> 
> #  elif defined(TARGET_LPC812)
> #    define OS_CLOCK       36000000
> 
> #  elif defined(TARGET_LPC824)
> #    define OS_CLOCK       30000000
> 
> #  elif  defined(TARGET_STM32F100RB)
> #    define OS_CLOCK       24000000
> 
> #  elif defined(TARGET_LPC4088) || defined(TARGET_K64F)
> #    define OS_CLOCK       120000000
> 
> #  elif defined(TARGET_LPC4337)
> #    define OS_CLOCK       204000000
> 
> #  elif defined(TARGET_STM32F407) || defined(TARGET_F407VG)
> #    define OS_CLOCK       168000000
> 
> #  elif defined(TARGET_NRF51822)
> #    define OS_CLOCK       16000000
> 
> #  elif defined(TARGET_STM32F401RE)
> #    define OS_CLOCK       84000000
> 
> #  elif defined(TARGET_STM32F411RE)
> #     define OS_CLOCK      100000000
> 
> #elif defined(TARGET_STM32F103RB)
> #    define OS_CLOCK       72000000
> 
> #  else
> #    error "no target defined"
> #  endif
> #endif
> 
156c211
<  #define OS_TIMERCBQS   16
---
>  #define OS_TIMERCBQS   4
189,196c244
< #define OS_TRV          ((uint32_t)((((float)OS_CLOCK*(float)OS_TICK))/(float)1E6+0.5f)-1)
< 
< U32 os_get_trv       (void)
< {
<     return OS_TRV;
< }
< 
< extern void rtx_show_all_threads(void);
---
> #define OS_TRV          ((uint32_t)(((double)OS_CLOCK*(double)OS_TICK)/1E6)-1)
198,200d245
< #if TASK_HUNG_CHECK_ENABLED
< extern void check_hung_tasks(void);
< #endif
209,222d253
<     unsigned int os_ticks;
<     HWTIMER_ID timer;
<     int ret;
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<     unsigned int start_time;
<     unsigned int start_os_time;
<     unsigned int start_tick;
< #endif
< #if defined(FPGA) || !(defined(ROM_BUILD) || defined(PROGRAMMER))
<     ret = hal_trace_crash_dump_register(HAL_TRACE_CRASH_DUMP_MODULE_SYS, rtx_show_all_threads);
<     ASSERT(ret == 0, "IdleTask: Failed to register crash dump callback");
< #endif
<     timer = hwtimer_alloc((HWTIMER_CALLBACK_T)rt_psh_req, NULL);
<     ASSERT(timer, "IdleTask: Failed to alloc sleep timer");
228,257c259
< #if TASK_HUNG_CHECK_ENABLED
<         check_hung_tasks();
< #endif
< 
<         if (hal_sleep_light_sleep() == HAL_SLEEP_STATUS_DEEP) {
<             os_ticks = rt_suspend();
<             if (os_ticks) {
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<                 __disable_irq();
< #endif
<                 ret = hwtimer_start(timer, MS_TO_HWTICKS(os_ticks * OS_TICK / 1000));
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<                 start_time = hal_sys_timer_get();
<                 start_tick = SysTick->VAL;
<                 start_os_time = os_time;
<                 __enable_irq();
< #endif
<                 if (ret == 0) {
<                     sleep();
<                     ret = hwtimer_stop(timer);
<                 }
< #if defined(DEBUG_SLEEP) && (DEBUG_SLEEP >= 2)
<                 if (hal_sys_timer_get() - start_time >= MS_TO_HWTICKS(1)) {
<                     TRACE(4,"[%u/0x%X][%2u/%u] os_idle_demon start timer",
<                         TICKS_TO_MS(start_time), start_time, start_tick, start_os_time);
<                 }
< #endif
<             }
<             rt_resume(os_ticks);
<         }
---
>       // sleep();
264c266,267
< extern void rtx_show_current_thread(void);
---
> extern void mbed_die(void);
> 
268,283c271
< 
<     rtx_show_current_thread();
<     ASSERT(0, "os_error: %d ThreadId:%d\n", err_code, osGetThreadIntId());
< 
<     //mbed_die();
< }
< 
< void os_error_str (const char *str, ...) {
<     va_list ap;
<     static char buf[50];
< 
<     va_start(ap, str);
<     vsnprintf(buf, sizeof(buf), str, ap);
<     va_end(ap);
< 
<     ASSERT(0, "%s\n", buf);
---
>     mbed_die();
288,290c276
<         TRACE_IMM(1,"osStatus: %08x\n", status);
<         rtx_show_current_thread();
<         ASSERT(0, "sysThreadError ThreadId:%d\n", osGetThreadIntId());
---
>         mbed_die();
