local: https://raw.githubusercontent.com/pine64/OpenPineBuds/29b195e12da6a5c791d1418af8448be80bccf18d/platform/cmsis/ca/system_ARMCA.c
remote: https://raw.githubusercontent.com/ARM-software/CMSIS_5/122be858fd7178f2d6e4670bc7dc02588a254dca/Device/ARM/ARMCA7/Source/system_ARMCA7.c
diff -sw local remote
---

28,45c28,32
< #include "cmsis_nvic.h"
< #include "ca/system_ARMCA.h"
< #include "ca/irq_ctrl.h"
< #include "hal_location.h"
< #include "hal_cmu.h"
< 
< extern uint32_t __sram_text_data_start_load__[];
< extern uint32_t __sram_text_data_end_load__[];
< extern uint32_t __sram_text_data_start__[];
< extern uint32_t __sram_bss_start__[];
< extern uint32_t __sram_bss_end__[];
< extern uint32_t __bss_start__[];
< extern uint32_t __bss_end__[];
< extern uint32_t __sync_flags_start[];
< extern uint32_t __sync_flags_end[];
< extern uint32_t __psramuhs_text_data_start_load__[];
< extern uint32_t __psramuhs_text_data_end_load__[];
< extern uint32_t __psramuhs_text_start[];
---
> #include "RTE_Components.h"
> #include CMSIS_device_header
> #include "irq_ctrl.h"
> 
> #define  SYSTEM_CLOCK  12000000U
48c35
<   System Initialization
---
>   System Core Clock Variable
50,80c37
< void SystemInit (void)
< {
<     uint32_t *dst, *src;
< 
<     if (__sram_text_data_start__ != __sram_text_data_start_load__) {
<         for (dst = __sram_text_data_start__, src = __sram_text_data_start_load__;
<                 src < __sram_text_data_end_load__;
<                 dst++, src++) {
<             *dst = *src;
<         }
<     }
< 
<     hal_cmu_dsp_setup();
<     /*psramhus_test load region covers sram_bss, and it needs to be copyed first*/
< #if defined(CHIP_HAS_PSRAMUHS) && defined(PSRAMUHS_ENABLE)
<     for (dst = __psramuhs_text_start, src = __psramuhs_text_data_start_load__;
<             src < __psramuhs_text_data_end_load__;
<             dst++, src++) {
<         *dst = *src;
<     }
< #endif
< 
<     for (dst = __sram_bss_start__; dst < __sram_bss_end__; dst++) {
<         *dst = 0;
<     }
< 
< #ifdef NOSTD
<     for (dst = __bss_start__; dst < __bss_end__; dst++) {
<         *dst = 0;
<     }
< #endif
---
> uint32_t SystemCoreClock = SYSTEM_CLOCK;
82,83c39,44
<     for (dst = __sync_flags_start; dst < __sync_flags_end; dst++) {
<         *dst = 0;
---
> /*----------------------------------------------------------------------------
>   System Core Clock update function
>  *----------------------------------------------------------------------------*/
> void SystemCoreClockUpdate (void)
> {
>   SystemCoreClock = SYSTEM_CLOCK;
85a47,51
> /*----------------------------------------------------------------------------
>   System Initialization
>  *----------------------------------------------------------------------------*/
> void SystemInit (void)
> {
89,91d54
<   // Init exception vectors
<   GIC_InitVectors();
< 
131,136d93
< 
< uint32_t BOOT_TEXT_SRAM_DEF(get_cpu_id) (void)
< {
<     return __get_MPIDR() & 3;
< }
< 
