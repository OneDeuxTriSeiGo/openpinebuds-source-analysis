local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/drivers/ana/pmu.h
remote: https://raw.githubusercontent.com/dawmlight/device_bestechnic/fc81e5e2ceafd3610bae6591117735ff997d478d/bes2600w/sdk_liteos/bsp/platform/drivers/ana/pmu.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 bestechnic (Shanghai) Technologies CO., LIMITED.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
30,33c29,31
< #define PMU_DEBUG_TRACE(n, s, ...)          LOG_DUMMY(n, s, ##__VA_ARGS__)
< #define PMU_DEBUG_TRACE_IMM(n, s, ...)      LOG_INFO((n) | LOG_ATTR_IMM, s, ##__VA_ARGS__)
< #define PMU_INFO_TRACE_IMM(n, s, ...)       LOG_INFO((n) | LOG_ATTR_IMM, s, ##__VA_ARGS__)
< #define PMU_INFO_TRACE(n, s, ...)           LOG_INFO(n, s, ##__VA_ARGS__)
---
> #define PMU_DEBUG_TRACE(n, s, ...)          TR_DUMMY(n, s, ##__VA_ARGS__)
> #define PMU_INFO_TRACE_IMM(n, s, ...)       TR_INFO((n) | TR_ATTR_IMM, s, ##__VA_ARGS__)
> #define PMU_INFO_TRACE(n, s, ...)           TR_INFO(n, s, ##__VA_ARGS__)
39a38,39
> #define wifi_read(reg, val)                  hal_analogif_reg_read(ISPI_WFRF_REG(reg), val)
> #define wifi_write(reg, val)                 hal_analogif_reg_write(ISPI_WFRF_REG(reg), val)
49a50
> #ifndef SECURITY_VALUE_T
60a62
> #endif
138c140
< void pmu_reset(void);
---
> void pmu_reboot(void);
159a162,163
> void pmu_fir_freq_config(uint32_t freq);
> 
161a166,167
> void pmu_iir_eq_freq_config(uint32_t freq);
> 
163a170,171
> void pmu_rs_adc_freq_config(uint32_t freq);
> 
235a244,247
> void pmu_led_breathing_enable(enum HAL_IOMUX_PIN_T pin, const struct PMU_LED_BR_CFG_T *cfg);
> 
> void pmu_led_breathing_disable(enum HAL_IOMUX_PIN_T pin);
> 
252a265,278
> 
> //=========================================================================
> // APIs for internal use only
> //=========================================================================
> 
> void pmu_wdt_save_context(void);
> 
> void pmu_wdt_restore_context(void);
> 
> void pmu_charger_save_context(void);
> 
> void pmu_charger_shutdown_config(void);
> 
> int pmu_get_gpadc_data_bits(void);
