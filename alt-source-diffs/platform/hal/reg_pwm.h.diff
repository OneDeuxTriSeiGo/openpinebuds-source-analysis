local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/reg_pwm.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/hal/reg_pwm.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
33a33,34
>     __IO uint32_t ST1_23;                   // 0x028
>     __IO uint32_t TWINKLE23;                // 0x02C
91a93,114
> 
> #define SUBCNT_DATA2_SHIFT                  0
> #define SUBCNT_DATA2_MASK                   (0xFF << SUBCNT_DATA2_SHIFT)
> #define SUBCNT_DATA2(n)                     BITFIELD_VAL(SUBCNT_DATA2, n)
> #define SUBCNT_DATA3_SHIFT                  8
> #define SUBCNT_DATA3_MASK                   (0xFF << SUBCNT_DATA3_SHIFT)
> #define SUBCNT_DATA3(n)                     BITFIELD_VAL(SUBCNT_DATA3, n)
> #define TG_SUBCNT_D2_ST_SHIFT               16
> #define TG_SUBCNT_D2_ST_MASK                (0x7F << TG_SUBCNT_D2_ST_SHIFT)
> #define TG_SUBCNT_D2_ST(n)                  BITFIELD_VAL(TG_SUBCNT_D2_ST, n)
> #define REG_PWM2_BR_EN                      (1 << 23)
> #define TG_SUBCNT_D3_ST_SHIFT               24
> #define TG_SUBCNT_D3_ST_MASK                (0x7F << TG_SUBCNT_D3_ST_SHIFT)
> #define TG_SUBCNT_D3_ST(n)                  BITFIELD_VAL(TG_SUBCNT_D3_ST, n)
> #define REG_PWM3_BR_EN                      (1 << 31)
> 
> #define REG_PWM2_ST1_SHIFT                  0
> #define REG_PWM2_ST1_MASK                   (0xFFFF << REG_PWM2_ST1_SHIFT)
> #define REG_PWM2_ST1(n)                     BITFIELD_VAL(REG_PWM2_ST1, n)
> #define REG_PWM3_ST1_SHIFT                  16
> #define REG_PWM3_ST1_MASK                   (0xFFFF << REG_PWM3_ST1_SHIFT)
> #define REG_PWM3_ST1(n)                     BITFIELD_VAL(REG_PWM3_ST1, n)
