local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/reg_transq.h
remote: https://raw.githubusercontent.com/dawmlight/device_bestechnic/63ade68296297f19742d8d5f98353c4376e516cb/bes2600w/sdk_liteos/bsp/platform/hal/reg_transq.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 bestechnic (Shanghai) Technologies CO., LIMITED.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
19a19,86
> #ifdef EXTEND_TRANSQ_2003
> #define TRANSQ_SLOT_NUM_WIFI                 52
> #define TRANSQ_SLOT_NUM_DSP                  32
> struct TRANSQ_T
> {
>     __IO uint32_t CTRL;                 // 0x000
>     __IO uint32_t RMT_INTMASK;          // 0x004
>     __IO uint32_t RMT_INTSET;           // 0x008
>     __IO uint32_t LDONE_INTMASK;        // 0x00C
>     union {
>         __I  uint32_t LDONE_RIS;        // 0x010
>         __O  uint32_t LDONE_INTCLR;     // 0x010
>     } LDONE_ISC;
>     __IO uint32_t LERR_INTMASK;         // 0x014
>     union {
>         __I  uint32_t LERR_RIS;         // 0x018
>         __O  uint32_t LERR_INTCLR;      // 0x018
>     } LERR_ISC;
>     __IO uint32_t RESERVED_01C;         // 0x01C
>     __I  uint32_t LDONE_MIS;            // 0x020
>     __I  uint32_t LERR_MIS;             // 0x024
>     __IO uint32_t RESERVED_028[2];      // 0x028
>     struct {
>         __IO uint32_t ADDR;             // 0x030 + N * 8
>         __IO uint32_t LEN;              // 0x038 + N * 8
>     } WSLOT[TRANSQ_SLOT_NUM_WIFI];
>     
>     __IO uint32_t RMT_INTMASK_E;          // 0x1b0
>     __IO uint32_t RMT_INTSET_E;           // 0x1b4
>     __IO uint32_t LDONE_INTMASK_E;        // 0x1b8
>     
>     union {
>         __I  uint32_t LDONE_RIS;        // 0x1bc
>         __O  uint32_t LDONE_INTCLR;     // 0x1bc
>     } LDONE_ISC_E;
>     __IO uint32_t LERR_INTMASK_E;         // 0x1c0
>     union {
>         __I  uint32_t LERR_RIS;         // 0x1c4
>         __O  uint32_t LERR_INTCLR;      // 0x1c4
>     } LERR_ISC_E;
>     __I  uint32_t LDONE_MIS_E;            // 0x1c8
>     __I  uint32_t LERR_MIS_E;             // 0x1cc
>     union {
>         __I  uint32_t RMT_RIS;          // 0x1d0
>         __O  uint32_t RMT_INTCLR;       // 0x1d0
>     } RMT_ISC_E;
>     __IO uint32_t RMT_MIS_E;         // 0x1d4
>     __IO uint32_t RESERVED_130[2];   // 0x1b0 //2003
>     union {
>         __I  uint32_t RMT_RIS;          // 0x200
>         __O  uint32_t RMT_INTCLR;       // 0x200
>     } RMT_ISC;
>     __IO uint32_t RMT_MIS;              // 0x204
>     __IO uint32_t RESERVED_208[10];     // 0x208
>     struct {
>         __I  uint32_t ADDR;             // 0x230 + N * 8
>         __I  uint32_t LEN;              // 0x238 + N * 8
>     } RSLOT[TRANSQ_SLOT_NUM_WIFI];
> };
> 
> // CTRL
> #define CTRL_REMOTE_IRQ_EN          (1 << 0)
> #define CTRL_LOCAL_DONE_IRQ_EN      (1 << 1)
> #define CTRL_LOCAL_ERR_IRQ_EN       (1 << 2)
> 
> #define TRANSQ_BIT(n)               (1 << (n))
> 
> #else
65c132
< 
---
> #endif
