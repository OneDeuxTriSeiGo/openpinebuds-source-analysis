local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/hal_cmu.h
remote: https://raw.githubusercontent.com/alibaba/AliOS-Things/a99f20706f9c666903a12a205edce13263b1fadb/hardware/chip/haas1000/drivers/platform/hal/hal_cmu.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
281,288d279
< void hal_cmu_codec_iir_eq_enable(uint32_t speed);
< 
< void hal_cmu_codec_iir_eq_disable(void);
< 
< void hal_cmu_codec_psap_enable(uint32_t speed);
< 
< void hal_cmu_codec_psap_disable(void);
< 
295,298d285
< void hal_cmu_codec_fir_select_sys_clock(void);
< 
< void hal_cmu_codec_fir_select_own_clock(void);
< 
305,310d291
< void hal_cmu_codec_rs_adc_enable(uint32_t speed);
< 
< void hal_cmu_codec_rs_adc_disable(void);
< 
< int hal_cmu_codec_rs_adc_set_div(uint32_t div);
< 
367a349
> void hal_cmu_bt_module_reset_clear(void);
371,376d352
< void hal_cmu_bt_sys_clock_force_on(void);
< 
< void hal_cmu_bt_sys_clock_auto(void);
< 
< void hal_cmu_bt_sys_set_freq(enum HAL_CMU_FREQ_T freq);
< 
400a377,382
> void hal_cmu_misc_init(void);
> 
> void hal_cmu_misc_pass(void);
> 
> void hal_cmu_misc_fail(void);
> 
402a385,386
> void hal_cmu_simu_clr_tag(uint8_t shift);
> 
420,421d403
< 
< void hal_cmu_programmer_setup(void);
