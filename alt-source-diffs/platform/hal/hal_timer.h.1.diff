local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/hal_timer.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/hal/hal_timer.h
diff -sw local remote
---

1,15c1,14
< /***************************************************************************
<  *
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
<  *
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
>  *
>  *     http://www.apache.org/licenses/LICENSE-2.0
>  *
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
42a42,43
> #define CONFIG_SYSTICK_HZ_FLOAT     hal_sys_timer_systick_hz_float()
> 
48a50,51
> #define __SLIM_TICKS_TO_MS(tick)    ((tick) / ((uint32_t)CONFIG_SYSTICK_HZ / 1000))
> 
54a58,59
> #define CONFIG_SYSTICK_HZ_FLOAT     ((float)CONFIG_SYSTICK_HZ_NOMINAL)
> 
60a66,67
> #define __SLIM_TICKS_TO_MS(tick)    ((tick) / ((uint32_t)CONFIG_SYSTICK_HZ / 1000))
> 
97a105,115
> #define HAL_TIMER_LOAD_DELTA        1
> 
> enum HAL_TIMER_TYPE_T {
>     HAL_TIMER_TYPE_FREERUNNING = 0,
>     HAL_TIMER_TYPE_ONESHOT,
>     HAL_TIMER_TYPE_PERIODIC,
>     HAL_TIMER_TYPE_QTY
> };
> 
> typedef void (*HAL_TIMER_IRQ_HANDLER_T)(uint32_t elapsed);
> 
99a118,119
> void hal_sys_timer_wakeup(void);
> 
101a122,123
> uint32_t hal_aco_timer_get(void);
> 
127a150,151
> float hal_sys_timer_systick_hz_float(void);
> 
136,137d159
< uint32_t hal_timer_get_passed_ticks(uint32_t curr_ticks, uint32_t prev_ticks);
< 
141c163
< #define CONFIG_FAST_SYSTICK_HZ      (hal_cmu_get_crystal_freq() / 4)
---
> #define CONFIG_FAST_SYSTICK_HZ      (hal_cmu_get_fast_timer_freq())
155a178,184
> 
> void hal_fast_timer_sleep();
> 
> void hal_fast_timer_wakeup();
> 
> //=============================================================================
> // Non-OS compatibility
