local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/hal_uart.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/hal/hal_uart.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
41c40
< #if (CHIP_HAS_UART > 1)
---
> #if (CHIP_HAS_UART >= 2)
44c43
< #if (CHIP_HAS_UART > 2)
---
> #if (CHIP_HAS_UART >= 3)
46a46,48
> #if (CHIP_HAS_UART >= 4)
>     HAL_UART_ID_3,
> #endif
88a91,95
> enum HAL_UART_XFER_TYPE_T {
>     HAL_UART_XFER_TYPE_TX       = (1 << 0),
>     HAL_UART_XFER_TYPE_RX       = (1 << 1),
> };
> 
164a172,175
> void hal_uart_sleep(void);
> 
> void hal_uart_wakeup(void);
> 
167c178
< int hal_uart_pause(enum HAL_UART_ID_T id);
---
> int hal_uart_pause(enum HAL_UART_ID_T id, enum HAL_UART_XFER_TYPE_T type);
169c180
< int hal_uart_continue(enum HAL_UART_ID_T id);
---
> int hal_uart_continue(enum HAL_UART_ID_T id, enum HAL_UART_XFER_TYPE_T type);
242a254,260
> 
> void hal_uart_printf_output(const uint8_t *buf, uint32_t len);
> 
> static inline void hal_uart_output(const uint8_t *buf, uint32_t len)
> {
>     return hal_uart_printf_output(buf, len);
> }
