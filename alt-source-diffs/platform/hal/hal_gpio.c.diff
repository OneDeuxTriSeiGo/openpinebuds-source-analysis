local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/hal_gpio.c
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/hal/hal_gpio_v1.c
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,18c9,16
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
< #include "stdarg.h"
< #include "stdio.h"
< #include "plat_types.h"
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
> #if (CHIP_GPIO_VER <= 1)
> 
19a18
> #include "cmsis_nvic.h"
21d19
< #include "reg_gpio.h"
23,24d20
< #include "cmsis_nvic.h"
< #include "hal_uart.h"
27a24
> #include "reg_gpio_v1.h"
30d26
< #define HAL_GPIO_PORT_NUM 1
57,78d52
< struct GPIO_PORT_T {
<     __IO uint32_t GPIO_DR;                              // 0x00
<     __IO uint32_t GPIO_DDR;                             // 0x04
<     __IO uint32_t GPIO_CTL;                             // 0x08
< };
< 
< struct GPIO_BANK_T {
<     struct GPIO_PORT_T port[HAL_GPIO_PORT_NUM];
<     struct GPIO_PORT_T _port_reserved[3];
<     __IO uint32_t GPIO_INTEN;                           // 0x30
<     __IO uint32_t GPIO_INTMASK;                         // 0x34
<     __IO uint32_t GPIO_INTTYPE_LEVEL;                   // 0x38
<     __IO uint32_t GPIO_INT_POLARITY;                    // 0x3C
<     __I  uint32_t GPIO_INTSTATUS;                       // 0x40
<     __I  uint32_t GPIO_RAW_INTSTATUS;                   // 0x44
<     __IO uint32_t GPIO_DEBOUNCE;                        // 0x48
<     __IO uint32_t GPIO_PORTA_EOI;                       // 0x4C
<     __I  uint32_t GPIO_EXT_PORT[HAL_GPIO_PORT_NUM];     // 0x50
<     __I  uint32_t GPIO_EXT_PORT_reserved[3];
<     __IO uint32_t GPIO_LS_SYNC;                         // 0x60
< };
< 
432,436d405
<             if (cfg->irq_debounce)
<                 gpio_aux_bank[bank]->GPIO_DEBOUNCE |= 0x1<<pin_offset;
<             else
<                 gpio_aux_bank[bank]->GPIO_DEBOUNCE &= ~(0x1<<pin_offset);
< 
446a416,420
>             if (cfg->irq_debounce)
>                 gpio_aux_bank[bank]->GPIO_DEBOUNCE |= 0x1<<pin_offset;
>             else
>                 gpio_aux_bank[bank]->GPIO_DEBOUNCE &= ~(0x1<<pin_offset);
> 
452a427
>             gpio_aux_bank[bank]->GPIO_PORTA_EOI = (0x1 << pin_offset);
476,480d450
<             if (cfg->irq_debounce)
<                 gpio_bank[bank]->GPIO_DEBOUNCE |= 0x1<<pin_offset;
<             else
<                 gpio_bank[bank]->GPIO_DEBOUNCE &= ~(0x1<<pin_offset);
< 
490a461,465
>             if (cfg->irq_debounce)
>                 gpio_bank[bank]->GPIO_DEBOUNCE |= 0x1<<pin_offset;
>             else
>                 gpio_bank[bank]->GPIO_DEBOUNCE &= ~(0x1<<pin_offset);
> 
496a472
>             gpio_bank[bank]->GPIO_PORTA_EOI = (0x1 << pin_offset);
507a484,485
> 
> #endif
