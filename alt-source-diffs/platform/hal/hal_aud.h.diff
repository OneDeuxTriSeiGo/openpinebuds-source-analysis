local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/hal_aud.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/hal/hal_aud.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
46c45,47
< #elif defined(CHIP_BEST1400) || defined(CHIP_BEST1402) || \
---
> #elif defined(CHIP_BEST1305) || \
>     defined(CHIP_BEST1400) || defined(CHIP_BEST1402) || \
>     defined(CHIP_BEST1501) || defined(CHIP_BEST1600) || \
48c49,53
<     defined(CHIP_BEST2300P)
---
>     defined(CHIP_BEST2300P) || defined(CHIP_BEST1501SIMU) || defined(CHIP_BEST1600SIMU)
> 
> #if defined(CHIP_BEST1501) || defined(CHIP_BEST1501SIMU) || defined(CHIP_BEST1600SIMU)
> #define CODEC_FREQ_CRYSTAL                  CODEC_FREQ_24M
> #endif
68c73
< #elif defined(CHIP_BEST2000)
---
> #elif defined(CHIP_BEST2000) || defined(CHIP_BEST2001) || defined(CHIP_BEST2002)
74c79
< #elif defined(CHIP_BEST2001)
---
> #elif defined(CHIP_BEST2003)
76,77c81,82
< #define CODEC_PLL_DIV                       38
< #define CODEC_CMU_DIV                       8
---
> #define CODEC_PLL_DIV                       156
> #define CODEC_CMU_DIV                       13
106a112
>     AUD_STREAM_USE_INT_CODEC2,
139d144
<     AUD_SAMPRATE_512000 = 512000,
142c147,148
<     AUD_SAMPRATE_1024000 = 1024000,
---
>     AUD_SAMPRATE_812500 = 812500,   // 26M / 32
>     // NOTE: DIV must be a multiple of 32
203a210,220
> enum AUD_DATA_ALIGN_T {
>     AUD_DATA_ALIGN_I2S = 0,
>     AUD_DATA_ALIGN_LEFT_JUSTIFIED,
>     AUD_DATA_ALIGN_RIGHT_JUSTIFIED,
> };
> 
> enum AUD_FS_FIRST_EDGE_T {
>     AUD_FS_FIRST_EDGE_NEG = 0,  // I2S mode
>     AUD_FS_FIRST_EDGE_POS,      // TDM mode (likely)
> };
> 
208d224
< #ifdef __ANC_ASSIST__
210c226
< #endif
---
> 
226a243
>     AUD_INPUT_PATH_VOICE_DEV,
231d247
<     AUD_INPUT_PATH_ANC_WNR,
233,235c249,251
< #ifdef __ANC_ASSIST__
<     AUD_INPUT_PATH_AF_ANC,
< #endif
---
>     AUD_INPUT_PATH_ANC_ASSIST,
>     AUD_INPUT_PATH_HEARING,
> 
244a261
> #define ANC_TYPE_NUM    (8)
246,250c263,270
<     ANC_NOTYPE = (1 << 0),
<     ANC_FEEDFORWARD=(1 << 1),
<     ANC_FEEDBACK=(1 << 2),
<     ANC_TALKTHRU=(1 << 3),
<     ANC_MUSICCANCLE=(1 << 4),
---
>     ANC_NOTYPE          = 0,
>     ANC_FEEDFORWARD     = (1 << 0),
>     ANC_FEEDBACK        = (1 << 1),
>     ANC_TALKTHRU        = (1 << 2),
>     ANC_MUSICCANCLE     = (1 << 3),
>     ANC_SPKCALIB        = (1 << 4),
>     ANC_DEHOWLING       = (1 << 5),
>     PSAP_FEEDFORWARD    = (1 << 6),
262,265c282
<     TGT_VOLUME_LEVEL_WARNINGTONE = 0,
< 
<     TGT_VOLUME_LEVEL_MUTE,
<     TGT_VOLUME_LEVEL_0,
---
>     TGT_VOLUME_LEVEL_MUTE = 0,
280a298
>     TGT_VOLUME_LEVEL_MAX,
286c304
<     TGT_ADC_VOL_LEVEL_0,
---
>     TGT_ADC_VOL_LEVEL_0 = 0,
314a333,361
> };
> 
> #define VAD_DEF_MIC_FRAME_LEN       0x50    // 16K sample rate
> #define VAD_DEF_STH         0x10
> #define VAD_DEF_MVAD        0x7
> #define VAD_DEF_PSD_TH0     0x0
> #define VAD_DEF_PSD_TH1     0x07ffffff
> #define VAD_DEF_UDC         0x1//0xa
> #define VAD_DEF_UPRE        0x4
> #define VAD_DEF_DIG_MODE    0x1
> #define VAD_DEF_PRE_GAIN    0x4
> #define VAD_DEF_DC_BYPASS   0x0
> #define VAD_DEF_FRAME_TH0   0x32
> #define VAD_DEF_FRAME_TH1   0x1f4
> #define VAD_DEF_FRAME_TH2   0x1388
> #define VAD_DEF_RANGE0      0xf
> #define VAD_DEF_RANGE1      0x32
> #define VAD_DEF_RANGE2      0x96
> #define VAD_DEF_RANGE3      0x12c
> 
> struct AUD_VAD_SIMP_CFG_T {
>     enum AUD_VAD_TYPE_T type;
>     enum AUD_SAMPRATE_T sample_rate;
>     enum AUD_BITS_T bits;
>     AUD_VAD_CALLBACK handler;
>     uint8_t adc_gain;
>     uint8_t frame_len;
>     uint8_t frame_thresh;
>     uint8_t sound_thresh;
