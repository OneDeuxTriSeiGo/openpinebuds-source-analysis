local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/reg_uart.h
remote: https://raw.githubusercontent.com/dawmlight/device_bestechnic/63ade68296297f19742d8d5f98353c4376e516cb/bes2600w/sdk_liteos/bsp/platform/hal/reg_uart.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 bestechnic (Shanghai) Technologies CO., LIMITED.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
42c41,43
<     uint32_t RESERVED_04C[997];     // 0x04C
---
>     __IO uint32_t UARTOVSAMP;       // 0x04C
>     __IO uint32_t UARTOVSAMPST;     // 0x050
>     uint32_t RESERVED_04C[995];     // 0x054
52a54,64
> struct SAVED_UART_REGS_T {
>     uint32_t UARTILPR;
>     uint32_t UARTIBRD;
>     uint32_t UARTFBRD;
>     uint32_t UARTLCR_H;
>     uint32_t UARTCR;
>     uint32_t UARTIFLS;
>     uint32_t UARTIMSC;
>     uint32_t UARTDMACR;
> };
> 
110a123,135
> // Interrupt regs bits
> #define UARTINTERRUPT_RIM           (1 << 0)
> #define UARTINTERRUPT_CTSM          (1 << 1)
> #define UARTINTERRUPT_DCDM          (1 << 2)
> #define UARTINTERRUPT_DSRM          (1 << 3)
> #define UARTINTERRUPT_RX            (1 << 4)
> #define UARTINTERRUPT_TX            (1 << 5)
> #define UARTINTERRUPT_RT            (1 << 6)
> #define UARTINTERRUPT_FE            (1 << 7)
> #define UARTINTERRUPT_PE            (1 << 8)
> #define UARTINTERRUPT_BE            (1 << 9)
> #define UARTINTERRUPT_OE            (1 << 10)
> 
114a140,149
> 
> // UARTOVSAMP
> #define UARTOVSAMP_RATIO_SHIFT              0
> #define UARTOVSAMP_RATIO_MASK               (0xF << UARTOVSAMP_RATIO_SHIFT)
> #define UARTOVSAMP_RATIO(n)                 BITFIELD_VAL(UARTOVSAMP_RATIO, n)
> 
> // UARTOVSAMPST
> #define UARTOVSAMPST_START_SHIFT            0
> #define UARTOVSAMPST_START_MASK             (0xF << UARTOVSAMPST_START_SHIFT)
> #define UARTOVSAMPST_START(n)               BITFIELD_VAL(UARTOVSAMPST_START, n)
