local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/hal/hal_sleep_core_pd.S
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/hal/hal_sleep_core_pd.S
diff -sw local remote
---

1,8c1,5
< /***************************************************************************
<  *
<  * Copyright 2015-2020 BES.
<  * All rights reserved. All unpublished rights reserved.
<  *
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
10,13c7
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
15,20c9,13
<  ****************************************************************************/
< 
< /*
< =========================================================================
< 	Core Sleep Power Down and Wakeup Power Up Helper Functions
< =========================================================================
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
22d14
< 
50d41
<     ldr r3, =core_sleep_stack
52a44,53
> #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
>     mrs r0, msplim_ns
>     mrs r1, psplim_ns
>     mrs r2, msp_ns
>     mrs r3, psp_ns
>     mrs r4, primask_ns
>     mrs r5, faultmask_ns
>     mrs r6, control_ns
>     push {r0-r6}
> #endif
53a55
>     mrs r1, psplim
55a58,62
>     mrs r0, psp
>     mrs r1, primask
>     mrs r2, faultmask
>     mrs r3, control
>     push {r0-r3}
61d67
< #endif
62a69,70
> #endif
>     ldr r3, =core_sleep_stack
63a72
>     dsb
85a95
>     dsb
86a97
> #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
87a99,113
> #if 0
> /* Enable CP10 and CP11 Full Access. SCB->CPACR |= (3 << 10*2) | (3 << 11*2) */
>     ldr.w r0, =0xE000ED88
>     ldr r1, [r0]
>     orr r1, r1, #(0xF << 20)
>     str r1, [r0]
>     dsb
>     isb
> #endif
> #endif
>     pop {r0-r3}
>     msr psp, r0
>     msr primask, r1
>     msr faultmask, r2
>     msr control, r3
90a117,127
>     msr psplim, r1
> #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
>     pop {r0-r6}
>     msr msplim_ns, r0
>     msr psplim_ns, r1
>     msr msp_ns, r2
>     msr psp_ns, r3
>     msr primask_ns, r4
>     msr faultmask_ns, r5
>     msr control_ns, r6
> #endif
