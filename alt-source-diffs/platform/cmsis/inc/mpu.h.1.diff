local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/platform/cmsis/inc/mpu.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/platform/cmsis/inc/mpu.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
19a19
> #include "cmsis.h"
25,36c25,32
< enum MPU_ID_T {
<     MPU_ID_NULL_POINTER = 0,
<     MPU_ID_1,
<     MPU_ID_2,
<     MPU_ID_3,
<     MPU_ID_4,
<     MPU_ID_5,
<     MPU_ID_6,
<     MPU_ID_7,
< 
<     MPU_ID_QTY,
< };
---
> /*
>  * The MPU region numbers
>  */
> #ifdef __MPU_REGION_NUM
> #define MPU_ID_QTY      __MPU_REGION_NUM
> #else
> #define MPU_ID_QTY      (8)
> #endif
38,48c34
< /*mcu sections */
< #define MPU_ID_USER_DATA_SECTION    MPU_ID_1
< #define MPU_ID_FRAM_TEXT1           MPU_ID_2
< #define MPU_ID_FRAM_TEXT2           MPU_ID_3
< #define MPU_ID_CODE                 MPU_ID_4
< #define MPU_ID_SRAM_TEXT            MPU_ID_5
< 
< /*cp sections */
< #define MPU_ID_CP_FLASHX            MPU_ID_2
< #define MPU_ID_CP_FLASH             MPU_ID_3
< #define MPU_ID_CP_FLASH_NC          MPU_ID_4
---
> #define MPU_INVALID_ID 0xFF
61c47
< #if defined(__ARM_ARCH_8M_MAIN__)
---
> #if defined(__ARM_ARCH_8M_MAIN__) || defined(__ARM_ARCH_7EM__ENHANCE__)
66c52
<     MAIR_ATTR_EXT_SRAM,
---
>     MAIR_ATTR_EXT_RAM,
68c54
<     MAIR_ATTR_4,
---
>     MAIR_ATTR_NC_MEM,
82c68
< #if defined(__ARM_ARCH_8M_MAIN__)
---
> #if defined(__ARM_ARCH_8M_MAIN__) || defined(__ARM_ARCH_7EM__ENHANCE__)
93,96c79
< // Note, srd_bits, mpu subregion bits, which can be divided to 8 sub regions
< // per region, if don't need, always set the arguments to 0;
< int mpu_set(enum MPU_ID_T id, uint32_t addr, uint32_t len, int srd_bits,
<                                                     enum MPU_ATTR_T attr);
---
> int mpu_set(uint8_t id, uint32_t addr, uint32_t len, enum MPU_ATTR_T attr);
98c81
< int mpu_clear(enum MPU_ID_T id);
---
> int mpu_clear(uint8_t id);
101c84
< int mpu_setup(void);
---
> int mpu_setup(const mpu_regions_t *mpu_table, uint32_t region_num);
104a88,95
> 
> uint8_t mpu_alloc_region(void);
> 
> void mpu_free_region(uint8_t id);
> 
> void mpu_sleep(void);
> 
> void mpu_wakeup(void);
