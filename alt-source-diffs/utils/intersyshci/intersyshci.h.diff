local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/utils/intersyshci/intersyshci.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/utils/intersyshci/intersyshci.h
diff -sw local remote
---

1,4c1,5
< /***************************************************************************
<  *
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
6,13c7
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
15,16c9,14
<  ****************************************************************************/
< 
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
20a19
> #define INTERSYS_TX_SIGNAL (0x01)
26c25
< void BESHCI_BufferAvai(void *packet);
---
> bool BESHCI_Controller_Log_Handler(const unsigned char *p_buff, uint32_t length);
29,34c28,43
< void BESHCI_Poll(void);
< void BESHCI_LockBuffer(void);
< void BESHCI_UNLockBuffer(void);
< void BESHCI_SCO_Data_Start(void);
< void BESHCI_SCO_Data_Stop(void);
< void uartrxtx(void const *argument);
---
> void BESHCI_LOCK_TX(void);
> void BESHCI_UNLOCK_TX(void);
> /***************************************************************************
>  *
>  * BES intersys RX data API
>  * Please return the length of the data read each time
>  *
>  ****************************************************************************/
> unsigned short bes_hci_receive_data( const uint8_t *buf, uint32_t size);
> 
> /***************************************************************************
>  *
>  * BES intersys TX data API
>  *
>  ****************************************************************************/
> int bes_hci_send_data(uint8_t *buf, int size);
36,37d44
< bool BESHCI_Controller_Log_Handler(const unsigned char *p_buff, uint32_t length);
< void BESHCI_Dump_A2DP_Seq(const unsigned char *p_buff, uint32_t length);
40a48,52
> typedef void (*intersys_log_report_func)(uint8_t* data);
> void intersys_register_log_report_handler_callback(intersys_log_report_func func);
> 
> void bes_get_hci_rx_flowctrl_info(void);
> void bes_get_hci_tx_flowctrl_info(void);
