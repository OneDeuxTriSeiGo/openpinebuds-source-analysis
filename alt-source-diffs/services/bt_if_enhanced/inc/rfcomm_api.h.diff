local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/bt_if_enhanced/inc/rfcomm_api.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/521459d7e674ad3cf4d70b0faa3cb2cacd90f7b0/bes2600w/sdk_liteos/bsp/services/bt_if_enhanced/inc/rfcomm_api.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
221c220
<     int8_t server_channel;
---
>     uint8_t server_channel;
223c222
<     uint32_t app_id;
---
>     uint64_t app_id;
279c278
< uint32_t btif_rf_get_app_id(rf_channel_t chan_h);
---
> uint64_t btif_rf_get_app_id(rf_channel_t chan_h);
286c285
< void btif_rf_set_app_id(rf_channel_t chan_h,uint32_t app_id);
---
> void btif_rf_set_app_id(rf_channel_t chan_h,uint64_t app_id);
289,291d287
< #if defined(ENHANCED_STACK)
< uint32_t btif_save_rfc_ctx(uint8_t *ctx_buffer, uint8_t MuxId);
< uint32_t btif_set_rfc_ctx(uint8_t* ctx_buffer, uint16_t MuxId, uint8_t rm_devtbl_idx);
293,303c289
< bool btif_rfc_is_dlci_channel_connected(uint32_t session_l2c_handle,uint32_t app_id);
< #else
< uint32_t btif_save_rfc_ctx(uint8_t *ctx_buffer, uint8_t MuxId);
< uint32_t btif_set_rfc_ctx(uint8_t* ctx_buffer, uint16_t MuxId, uint8_t rm_devtbl_idx);
< uint32_t btif_save_rfcomm_channel_ctx(uint8_t *ctx_buffer, uint8_t MuxId, uint32_t app_id);
< uint32_t btif_set_rfcomm_channel_ctx(uint8_t *ctx_buffer, uint8_t MuxId, uint32_t app_id);
< #endif
< bool btif_rf_is_rfcomm_channel_connected(uint8_t mux_id,uint32_t app_id);
< btif_remote_device_t*  btif_rfc_get_mux_remote_device(uint8_t mux_idx);
< uint8_t btif_rfc_get_mux_index(uint16_t hci_handle);
< uint8_t btif_rfc_get_mux_state(uint8_t mux_idx);
---
> bool btif_rfc_is_dlci_channel_connected(uint32_t session_l2c_handle,uint64_t app_id);
