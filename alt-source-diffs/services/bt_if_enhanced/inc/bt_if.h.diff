local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/bt_if_enhanced/inc/bt_if.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/521459d7e674ad3cf4d70b0faa3cb2cacd90f7b0/bes2600w/sdk_liteos/bsp/services/bt_if_enhanced/inc/bt_if.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
24,57c23,42
< #define    BTIF_APP_INVALID_ID              (0x00000000u)
< #define    BTIF_APP_HFP_PROFILE_ID          (0x00000001u)
< #define    BTIF_APP_A2DP_PROFILE_ID         (0x00000002u)
< #define    BTIF_APP_AVRCP_PROFILE_ID        (0x00000004u)
< #define    BTIF_APP_MAP_PROFILE_ID          (0X00000008u)
< #define    BTIF_APP_HID_PROFILE_ID          (0X00000010u)
< 
< #define    BTIF_APP_SPP_SERVER_START_ID     (0x00000020u)
< #define    BTIF_APP_SPP_SERVER_ID_1         (BTIF_APP_SPP_SERVER_START_ID)
< #define    BTIF_APP_SPP_SERVER_ID_2         (BTIF_APP_SPP_SERVER_START_ID << 1)
< #define    BTIF_APP_SPP_SERVER_ID_3         (BTIF_APP_SPP_SERVER_START_ID << 2)
< #define    BTIF_APP_SPP_SERVER_ID_4         (BTIF_APP_SPP_SERVER_START_ID << 3)
< #define    BTIF_APP_SPP_SERVER_ID_5         (BTIF_APP_SPP_SERVER_START_ID << 4)
< #define    BTIF_APP_SPP_SERVER_ID_6         (BTIF_APP_SPP_SERVER_START_ID << 5)
< #define    BTIF_APP_SPP_SERVER_ID_7         (BTIF_APP_SPP_SERVER_START_ID << 6)
< #define    BTIF_APP_SPP_SERVER_ID_8         (BTIF_APP_SPP_SERVER_START_ID << 7)
< #define    BTIF_APP_SPP_SERVER_ID_9         (BTIF_APP_SPP_SERVER_START_ID << 8)
< #define    BTIF_APP_SPP_SERVER_ID_10        (BTIF_APP_SPP_SERVER_START_ID << 9)
< #define    BTIF_APP_SPP_SERVER_END_ID       (BTIF_APP_SPP_SERVER_ID_10)
< #define    BTIF_APP_SPP_SERVER_OFFSET       (4)
< #define    BTIF_APP_SPP_SERVER_NUM          (10)
< #define    BTIF_APP_SPP_SERVER_MASK         (0x000003FF<<BTIF_APP_SPP_SERVER_OFFSET)
< 
< #define    BTIF_APP_SPP_CLIENT_START_ID     (BTIF_APP_SPP_SERVER_END_ID)
< #define    BTIF_APP_SPP_CLIENT_ID_1         (BTIF_APP_SPP_CLIENT_START_ID << 1)
< #define    BTIF_APP_SPP_CLIENT_ID_2         (BTIF_APP_SPP_CLIENT_START_ID << 2)
< #define    BTIF_APP_SPP_CLIENT_ID_3         (BTIF_APP_SPP_CLIENT_START_ID << 3)
< #define    BTIF_APP_SPP_CLIENT_END_ID       (BTIF_APP_SPP_CLIENT_ID_3)
< #define    BTIF_APP_SPP_OFFSET              (4)
< #define    BTIF_APP_SPP_NUM                 (13)
< #define    BTIF_APP_SPP_MASK                (0x00001FFF<<BTIF_APP_SPP_OFFSET)
< 
< #define    BTIF_TWS_LINK_CONNECTED          (1 << 0)
< #define    BTIF_TWS_L2CAP_CONNECTED         (1 << 1)
---
> #define    BTIF_APP_INVALID_ID              ((uint64_t)(0x0000000000000000))
> #define    BTIF_APP_HFP_PROFILE_ID          ((uint64_t)(0x0000000000000001))
> #define    BTIF_APP_A2DP_PROFILE_ID         ((uint64_t)(0x0000000000000002))
> #define    BTIF_APP_AVRCP_PROFILE_ID        ((uint64_t)(0x0000000000000004))
> #define    BTIF_APP_MAP_PROFILE_ID          ((uint64_t)(0X0000000000000008))
> #define    BTIF_APP_BTGATT_PROFILE_ID       ((uint64_t)(0x0000000000000010))
> 
> #define    BTIF_APP_SPP_SERVER_START_ID     ((uint64_t)(0x0000000000000020))
> #define    BTIF_APP_SPP_SERVER_NUM          (30)
> #define    BTIF_APP_SPP_SERVER_END_ID       ((uint64_t)(BTIF_APP_SPP_SERVER_START_ID << (BTIF_APP_SPP_SERVER_NUM - 1)))
> #define    BTIF_APP_SPP_SERVER_OFFSET       (5)
> #define    BTIF_APP_SPP_SERVER_MASK         ((uint64_t)(0x000000003FFFFFFF<<BTIF_APP_SPP_SERVER_OFFSET))
> 
> 
> #define    BTIF_APP_SPP_CLIENT_START_ID     ((uint64_t)(BTIF_APP_SPP_SERVER_END_ID << 1))
> #define    BTIF_APP_SPP_CLIENT_NUM          (10)
> #define    BTIF_APP_SPP_CLIENT_END_ID       ((uint64_t)(BTIF_APP_SPP_CLIENT_START_ID << (BTIF_APP_SPP_CLIENT_NUM - 1)))
> #define    BTIF_APP_SPP_OFFSET              (5)
> #define    BTIF_APP_SPP_NUM                 (BTIF_APP_SPP_SERVER_NUM+BTIF_APP_SPP_CLIENT_NUM)
> #define    BTIF_APP_SPP_MASK                ((uint64_t)(0x000000FFFFFFFFFF<<BTIF_APP_SPP_OFFSET))
61,62c46,47
< uint32_t btif_app_get_app_id_from_spp_flag(uint8_t spp_flag);
< uint8_t btif_app_get_spp_flag_from_app_id(uint32_t app_id);
---
> uint64_t btif_app_get_app_id_from_spp_flag(uint8_t spp_flag);
> uint8_t btif_app_get_spp_flag_from_app_id(uint64_t app_id);
64a50,53
> 
> #define    BTIF_TWS_LINK_CONNECTED          (1 << 0)
> #define    BTIF_TWS_L2CAP_CONNECTED         (1 << 1)
> 
68a58,81
> void btif_ibrt_stack_clean_slave_status(void* remote);
> 
> #define RFCOMM_MAX_SYNC_DATA_SIZE (16)
> 
> struct a2dp_command_t {
>     bool is_valid;
>     uint8_t transaction;
>     uint8_t signal_id;
> } __attribute__ ((packed));
> 
> struct btif_sync_data_to_new_master_t {
>     bt_bdaddr_t remote_bdaddr;
>     struct a2dp_command_t stream_cmd;
>     uint8_t rfcomm_sync_data[RFCOMM_MAX_SYNC_DATA_SIZE];
> } __attribute__ ((packed));
> 
> bool btif_ibrt_master_wait_remote_new_master_ready(void *remote);
> 
> void btif_ibrt_master_tws_switch_set_start(void* remote);
> 
> void btif_ibrt_old_master_receive_ready_req(struct btif_sync_data_to_new_master_t *sync_data, void *remote);
> 
> void btif_ibrt_new_master_receive_ready_rsp(struct btif_sync_data_to_new_master_t *sync_data);
> 
91d103
< int a2dp_codec_init(void);
94a107
> int bt_set_local_clock(uint32_t clock);
97,98c110,111
< uint8_t bt_get_sco_number(void);
< void bt_set_sco_number(uint8_t sco_num);
---
> uint8_t bt_get_max_sco_number(void);
> void bt_set_max_sco_number(uint8_t sco_num);
102c115
< 
---
> void btif_set_extended_inquiry_response(uint8_t* eir, uint32_t len);
103a117
> int btif_me_send_hci_cmd(uint16_t opcode, uint8_t *param_data_ptr, uint8_t param_len);
104a119,127
> struct spp_dlc_info_t
> {
>     bt_bdaddr_t remote;
>     uint8_t dlci;
> } __attribute__ ((packed));
> 
> void btif_spp_register_report_close_to_ibrt_slave_callback(void (*cb)(void *remote, uint8_t dlci));
> 
> void btif_spp_ibrt_slave_release_dlc_connection(uint32_t device_id, uint32_t dlci);
113a137,139
> void btif_config_gatt_over_br_edr(bool isEnable);
> bool btif_is_gatt_over_br_edr_enabled(void);
> 
163a190,205
> #if defined(BT_SOURCE)
> void btif_pts_source_cretae_media_channel(void);
> void btif_pts_source_send_close_cmd(void);
> void btif_pts_source_send_discover_cmd(void);
> void btif_pts_source_send_get_capability_cmd(void);
> void btif_pts_source_send_set_configuration_cmd(void);
> void btif_pts_source_send_get_configuration_cmd(void);
> void btif_pts_source_send_reconfigure_cmd(void);
> void btif_pts_source_send_open_cmd(void);
> void btif_pts_source_send_abort_cmd(void);
> void btif_pts_source_send_get_all_capability_cmd(void);
> void btif_pts_source_send_suspend_cmd(void);
> void btif_pts_source_send_start_cmd(void);
> void btif_update_custom_eir_info(uint8_t eir_type, uint8_t *eir_buf, uint16_t eir_len);
> 
> #endif
