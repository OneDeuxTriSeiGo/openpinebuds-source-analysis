local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/bt_if_enhanced/inc/hci_api.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/521459d7e674ad3cf4d70b0faa3cb2cacd90f7b0/bes2600w/sdk_liteos/bsp/services/bt_if_enhanced/inc/hci_api.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,16c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
< 
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
24d21
< 
222a220,222
> #define BTIF_STANDARD_SCAN           0x00
> #define BTIF_INTERLACED_SCAN         0x01
> 
267a268,269
> typedef void (*btif_hci_read_avg_rssi_callback_func)(uint8_t status, uint16_t conhdl, int8_t rssi);
> 
269c271
< typedef bool (*btif_hci_sync_airmode_check_ind_func)(uint8_t status);
---
> typedef uint8_t (*btif_hci_sync_airmode_check_ind_func)(uint8_t status, bt_bdaddr_t *bdaddr);
281a284
> 
325a329,331
> 
>     void btif_register_read_rssi_callback(btif_hci_read_avg_rssi_callback_func func);
> 
327a334,335
>     void btif_hci_print_buff_status(void);
>     void btif_hci_fault_dump_trace(void);
332,336d339
<     uint8_t btif_hci_tws_switch_direct(uint8_t op);
<     uint32_t btif_save_hci_ctx(uint8_t * ctx_buffer, uint16_t dev_id);
<     uint32_t btif_set_hci_ctx(uint8_t* ctx_buffer, uint16_t dev_id);
<     uint16_t btif_hci_get_con_hci_handle(uint8_t con_idx);
<     uint8_t btif_hci_get_con_conflags(uint8_t con_idx);
