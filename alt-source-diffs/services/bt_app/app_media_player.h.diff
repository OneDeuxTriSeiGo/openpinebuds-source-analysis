local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/bt_app/app_media_player.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/521459d7e674ad3cf4d70b0faa3cb2cacd90f7b0/bes2600w/sdk_liteos/bsp/services/bt_app/app_media_player.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
22c21,25
< #define MEDIA_DEFAULT_LANGUAGE (0)
---
> #ifdef PROMPT_IN_FLASH
> #define MEDIA_DEFAULT_LANGUAGE (LANGUAGE_ID_EN)
> #else
> #define MEDIA_DEFAULT_LANGUAGE (LANGUAGE_ID_EN - 1)
> #endif
31a35,53
> typedef enum
> {
>     LANGUAGE_ID_INVALID = 0,
>     LANGUAGE_ID_EN      = 1,
>     LANGUAGE_ID_CN      = 2,
>     LANGUAGE_ID_GN      = 3,
>     LANGUAGE_ID_FN      = 4,
>     LANGUAGE_ID_KN      = 5,
>     LANGUAGE_ID_JN      = 6,
>     LANGUAGE_ID_RN      = 7,
> 
>     LANGUAGE_ID_NUM = 0xFF,
> } LANGUAGE_ID_E;
> 
> // Customized warning tone volume should be defined in tgt_hardware.h
> #ifndef MEDIA_VOLUME_LEVEL_WARNINGTONE
> #define MEDIA_VOLUME_LEVEL_WARNINGTONE TGT_VOLUME_LEVEL_12
> #endif
> 
37a60
> #define PROMOT_ID_BIT_MASK_LOCAL_PLAYING        (1 << 12)
45,46c68,80
< #define IS_PROMPT_CHNLSEl_LCHNL(promptId)         (((promptId)&PROMOT_ID_BIT_MASK_CHNLSEl_ALL) == PROMOT_ID_BIT_MASK_CHNLSEl_RCHNL  ? true : false)
< #define IS_PROMPT_CHNLSEl_RCHNL(promptId)         (((promptId)&PROMOT_ID_BIT_MASK_CHNLSEl_ALL) == PROMOT_ID_BIT_MASK_CHNLSEl_LCHNL  ? true : false)
---
> #define IS_PROMPT_CHNLSEl_LCHNL(promptId)         (((promptId)&PROMOT_ID_BIT_MASK_CHNLSEl_ALL) == PROMOT_ID_BIT_MASK_CHNLSEl_LCHNL  ? true : false)
> #define IS_PROMPT_CHNLSEl_RCHNL(promptId)         (((promptId)&PROMOT_ID_BIT_MASK_CHNLSEl_ALL) == PROMOT_ID_BIT_MASK_CHNLSEl_RCHNL  ? true : false)
> #define IS_PROMPT_PLAYED_LOCALLY(promptId)        ((promptId)&PROMOT_ID_BIT_MASK_LOCAL_PLAYING ? true : false)
> 
> typedef enum
> {
>     APP_PROMPT_NORMAL_PLAY              = 0,
>     APP_PROMPT_LOCAL_PLAY               = 1,
>     APP_PROMPT_REMOTE_PLAY              = 2,
>     APP_PROMPT_STANDALONE_PLAY          = 3,
>     APP_PROMPT_STANDALONE_LOCAL_PLAY    = 4,
>     APP_PROMPT_STANDALONE_REMOTE_PLAY   = 5,
> } APP_PROMPT_PLAY_REQ_TYPE_E;
91d124
< //uint32_t media_playAudioSideSelect(AUD_ID_ENUM id,uint8_t device_id, uint8_t side_select);
94,96c127
< uint32_t media_PlayAudio(AUD_ID_ENUM id,uint8_t device_id);
< 
< uint32_t media_playAudioSideSelect(AUD_ID_ENUM id,uint8_t device_id, uint16_t side_select);
---
> void media_PlayAudio(AUD_ID_ENUM id,uint8_t device_id);
121a153,155
> void app_prompt_push_request(APP_PROMPT_PLAY_REQ_TYPE_E reqType, 
>     AUD_ID_ENUM id, uint8_t device_id, bool isLocalPlaying);
> 
173a208,215
> 
> void app_prompt_inform_completed_event(void);
> 
> void app_prompt_list_init(void);
> 
> void app_prompt_stop_all(void);
> 
> void app_prompt_flush_pending_prompts(void);
