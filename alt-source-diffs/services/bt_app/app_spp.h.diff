local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/bt_app/app_spp.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/521459d7e674ad3cf4d70b0faa3cb2cacd90f7b0/bes2600w/sdk_liteos/bsp/services/bt_app/app_spp.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
35,49d33
< #ifdef ENHANCED_STACK
< #define    BTIF_APP_SPP_SERVER_GSOUND_CTL_ID    BTIF_APP_SPP_SERVER_ID_1
< #define    BTIF_APP_SPP_SERVER_GSOUND_AUD_ID    BTIF_APP_SPP_SERVER_ID_2
< #define    BTIF_APP_SPP_SERVER_TOTA_ID          BTIF_APP_SPP_SERVER_ID_3
< #define    BTIF_APP_SPP_SERVER_BES_OTA_ID       BTIF_APP_SPP_SERVER_ID_4
< #define    BTIF_APP_SPP_SERVER_AI_VOICE_ID      BTIF_APP_SPP_SERVER_ID_5
< #define    BTIF_APP_SPP_SERVER_GREEN_ID         BTIF_APP_SPP_SERVER_ID_6
< #define    BTIF_APP_SPP_SERVER_RED_ID           BTIF_APP_SPP_SERVER_ID_7
< #define    BTIF_APP_SPP_SERVER_FP_RFCOMM_ID     BTIF_APP_SPP_SERVER_ID_8
< #define    BTIF_APP_SPP_SERVER_TOTA_GENERAL_ID  BTIF_APP_SPP_SERVER_ID_9
< 
< 
< #define    BTIF_APP_SPP_CLIENT_AI_VOICE_ID      BTIF_APP_SPP_CLIENT_ID_1
< #define    BTIF_APP_SPP_CLIENT_CCMP_ID          BTIF_APP_SPP_CLIENT_ID_2
< #define    BTIF_APP_SPP_CLIENT_RED_ID           BTIF_APP_SPP_CLIENT_ID_3
64c48,61
<     RFCOMM_CHANNEL_TOTA_GENERAL = RFCOMM_CHANNEL_9,
---
>     RFCOMM_CHANNEL_AMA          = RFCOMM_CHANNEL_9,
>     RFCOMM_CHANNEL_BES          = RFCOMM_CHANNEL_10,
>     RFCOMM_CHANNEL_BAIDU        = RFCOMM_CHANNEL_11,
>     RFCOMM_CHANNEL_TENCENT      = RFCOMM_CHANNEL_12,
>     RFCOMM_CHANNEL_ALI          = RFCOMM_CHANNEL_13,
>     RFCOMM_CHANNEL_COMMON        = RFCOMM_CHANNEL_14,
>     RFCOMM_CHANNEL_COMMON_RECORD = RFCOMM_CHANNEL_15,
> 
>     RFCOMM_CHANNEL_CUSTOM_0     = RFCOMM_CHANNEL_16,
>     RFCOMM_CHANNEL_CUSTOM_1     = RFCOMM_CHANNEL_17,
>     RFCOMM_CHANNEL_CUSTOM_2     = RFCOMM_CHANNEL_18,
>     RFCOMM_CHANNEL_CUSTOM_3     = RFCOMM_CHANNEL_19,
>     RFCOMM_CHANNEL_CUSTOM_4     = RFCOMM_CHANNEL_20,
>     RFCOMM_CHANNEL_CUSTOM_5     = RFCOMM_CHANNEL_21,
66c63,121
< #endif
---
> 
> /*---------------------------------------------------------------------------
>  *            app_spp_alloc_server_id
>  *---------------------------------------------------------------------------
>  *
>  *Synopsis:
>  *    To alloc a spp server ID
>  *
>  * Parameters:
>  *    void
>  *
>  * Return:
>  *    uint64_t: the app_id that spp server get
>  */
> uint64_t app_spp_alloc_server_id(void);
> /*---------------------------------------------------------------------------
>  *            app_spp_free_server_id
>  *---------------------------------------------------------------------------
>  *
>  *Synopsis:
>  *    To free a spp server ID
>  *
>  * Parameters:
>  *    app_id: the app_id that spp server want to free
>  *
>  * Return:
>  *    true: free success
>  *    false: free fail
>  */
> bool app_spp_free_server_id(uint64_t app_id);
> /*---------------------------------------------------------------------------
>  *            app_spp_alloc_client_id
>  *---------------------------------------------------------------------------
>  *
>  *Synopsis:
>  *    To alloc a spp client ID
>  *
>  * Parameters:
>  *    void
>  *
>  * Return:
>  *    uint64_t: the app_id that spp client get
>  */
> uint64_t app_spp_alloc_client_id(void);
> /*---------------------------------------------------------------------------
>  *            app_spp_free_client_id
>  *---------------------------------------------------------------------------
>  *
>  *Synopsis:
>  *    To free a spp server ID
>  *
>  * Parameters:
>  *    app_id: the app_id that spp client want to free
>  *
>  * Return:
>  *    true: free success
>  *    false: free fail
>  */
> bool app_spp_free_client_id(uint64_t app_id);
69,73c124
< #if 0
< void app_spp_register_connect_callback(struct spp_device *osDev_t, spp_event_callback_t callback);
< void app_spp_register_disconnect_callback(struct spp_device *osDev_t, spp_event_callback_t callback);
< void app_spp_register_tx_done(struct spp_device *osDev_t, spp_event_callback_t callback);
< #endif
---
> 
