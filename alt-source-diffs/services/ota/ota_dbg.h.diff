local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/ota/ota_dbg.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/c0502a1345f2f5b7ffc7f38b5374be0fcb42a487/bes2600/liteos_m/sdk/bsp/services/ota/ota_dbg.h
diff -sw local remote
---

1,5c1,5
< /**
<  * @file ota_dbg.h
<  * @author BES AI team
<  * @version 0.1
<  * @date 2020-04-22
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
7,8c7
<  * @copyright Copyright (c) 2015-2020 BES Technic.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
10,17c9,13
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  * 
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
19d14
< 
31,35c26,30
< #define LOG_V(str, ...) LOG_VERBOSE(LOG_MOD(OTA), str, ##__VA_ARGS__)
< #define LOG_D(str, ...) LOG_DEBUG(LOG_MOD(OTA), str, ##__VA_ARGS__)
< #define LOG_I(str, ...) LOG_INFO(LOG_MOD(OTA), str, ##__VA_ARGS__)
< #define LOG_W(str, ...) LOG_WARN(LOG_MOD(OTA), str, ##__VA_ARGS__)
< #define LOG_E(str, ...) LOG_ERROR(LOG_MOD(OTA), str, ##__VA_ARGS__)
---
> #define LOG_V(str, ...) TR_VERBOSE(TR_MOD(OTA), str, ##__VA_ARGS__)
> #define LOG_D(str, ...) TR_DEBUG(TR_MOD(OTA), str, ##__VA_ARGS__)
> #define LOG_I(str, ...) TR_INFO(TR_MOD(OTA), str, ##__VA_ARGS__)
> #define LOG_W(str, ...) TR_WARN(TR_MOD(OTA), str, ##__VA_ARGS__)
> #define LOG_E(str, ...) TR_ERROR(TR_MOD(OTA), str, ##__VA_ARGS__)
