local: https://raw.githubusercontent.com/pine64/OpenPineBuds/533d01aee617f24dfe9cda124fbb20b6efbe2f73/services/nv_section/userdata_section/nvrecord_env.h
remote: https://raw.githubusercontent.com/OneDeuxTriSeiGo/device_soc_bestechnic/521459d7e674ad3cf4d70b0faa3cb2cacd90f7b0/bes2600w/sdk_liteos/bsp/services/nv_section/userdata_section/nvrecord_env.h
diff -sw local remote
---

1c1,5
< /***************************************************************************
---
> /*
>  * Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
>  * Licensed under the Apache License, Version 2.0 (the "License");
>  * you may not use this file except in compliance with the License.
>  * You may obtain a copy of the License at
3,4c7
<  * Copyright 2015-2019 BES.
<  * All rights reserved. All unpublished rights reserved.
---
>  *     http://www.apache.org/licenses/LICENSE-2.0
6,15c9,14
<  * No part of this work may be used or reproduced in any form or by any
<  * means, or stored in a database or retrieval system, without prior written
<  * permission of BES.
<  *
<  * Use of this work is governed by a license granted by BES.
<  * This work contains confidential and proprietary information of
<  * BES. which is protected by copyright, trade secret,
<  * trademark and other intellectual property rights.
<  *
<  ****************************************************************************/
---
>  * Unless required by applicable law or agreed to in writing, software
>  * distributed under the License is distributed on an "AS IS" BASIS,
>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>  * See the License for the specific language governing permissions and
>  * limitations under the License.
>  */
36a36
> void nv_record_clean_tws_name(void);
38a39,49
> void nv_record_update_factory_le_rx_test_env(uint32_t to, uint16_t remote_tx_nb,uint8_t test_type,uint8_t rx_channel, uint8_t phy, uint8_t mod_idx);
> void nv_record_update_factory_le_tx_test_env(uint32_t to, uint8_t test_type, uint8_t tx_channel, uint8_t data_len, uint8_t pkt_payload, uint8_t phy);
> void nv_record_reset_factory_test_env(void);
> void nv_record_update_factory_le_rx_test_result(bool test_done, uint16_t result);
> void nv_record_factory_get_le_rx_test_result(bool* test_done, uint16_t* result);
> void nv_record_update_factory_bt_nonsignaling_test_result(bool test_done, uint16_t result, uint16_t hec_nb,uint16_t crc_nb);
> void nv_record_factory_get_bt_nonsignalint_rx_test_result(bool* test_done, uint16_t* result, uint16_t* hec_nb, uint16_t* crc_nb);
> void nv_record_update_factory_bt_nonsignaling_env(uint32_t to, uint8_t test_type,
>                                 uint8_t hopping_mode, uint8_t whitening_mode, uint8_t tx_freq, uint8_t rx_freq, uint8_t power_level,
>                                 uint8_t lt_addr, uint8_t edr_enabled, uint8_t packet_type, uint8_t payload_pattern, uint16_t payload_length,
>                                 uint32_t tx_packet_num);
